name: Sync Gitee to GitHub

on:
  schedule:
    # 每隔 5 小时执行一次，排除 3 到 8 点之间
    - cron: "0 0-2,9-23/2 * * *"  # 每 5 小时执行，排除 3 到 8 点之间
  workflow_dispatch:  # 允许手动触发

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      # Checkout GitHub repository
      - name: Checkout GitHub repo
        uses: actions/checkout@v3

      # Set up Git
      - name: Set up Git
        run: |
          git config --global user.name "mbxj"  # 设置 Git 用户名
          git config --global user.email "838756854@qq.com"  # 设置 Git 邮箱

      # Clone the Gitee repository (不作为子模块)
      - name: Clone Gitee repository
        run: |
          git clone -b master https://gitee.com/xx68/x6.git  # 克隆 Gitee 仓库的 master 分支
          ls -la x6  # 列出克隆后目录的内容，确保文件被成功下载

      # Rename files if they exist
      - name: Rename files if they exist
        run: |
          cd x6
          # 检查文件并重命名
          if [ -f "mg.m3u" ]; then mv mg.m3u xiaomg.m3u; fi
          if [ -f "iqy.m3u" ]; then mv iqy.m3u jieiqy.m3u; fi
          if [ -f "tx.m3u" ]; then mv tx.m3u baotx.m3u; fi
          
          # 查看当前文件是否已更名成功
          echo "Current files after renaming:"
          ls -la

      # 如果 xiaomg.m3u 存在，下载文件内容
      - name: Download content to xiaomg.m3u
        run: |
          if [ -f "x6/xiaomg.m3u" ]; then
            echo "Downloading content for xiaomg.m3u from URL"
            curl -o x6/xiaomg.m3u https://qifeii.top/mg1  # 从指定 URL 获取内容
          fi

      # Copy files from Gitee to GitHub repository
      - name: Copy files to GitHub repository
        run: |
          cp -r x6/* .  # 复制 Gitee 仓库中的所有文件到当前 GitHub 仓库目录

      # Remove the cloned 'x6' folder to prevent unwanted files
      - name: Remove x6 folder
        run: |
          rm -rf x6  # 删除 x6 文件夹（确保没有被上传）

      # Commit and push to GitHub
      - name: Commit and push to GitHub
        run: |
          git add .  # 添加所有文件
          git commit -m "Sync files from Gitee repository"  # 提交
          git push https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/mbxj/cb.github.io.git main  # 推送到 GitHub 仓库

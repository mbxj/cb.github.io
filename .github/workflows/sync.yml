name: Sync GitCode to GitHub

on:
  schedule:
    - cron: "*/3 * * * *"  # 每三分钟触发一次
  workflow_dispatch:  # 允许手动触发

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      # Checkout GitHub repository
      - name: Checkout GitHub repo
        uses: actions/checkout@v3

      # Set up Git
      - name: Set up Git
        run: |
          git config --global user.name "mbxj"  # 设置 Git 用户名
          git config --global user.email "838756854@qq.com"  # 设置 Git 邮箱

      # Clone the GitCode repository
      - name: Clone GitCode repository
        run: |
          git clone https://gitee.com/xx68/x6.git  # 克隆 GitCode 仓库
          ls -la x6  # 列出克隆后目录的内容，确保文件被成功下载

      # Force push to GitHub repository
      - name: Force push to GitHub
        run: |
          cd x6  # 进入克隆的仓库目录
          git remote add github https://github.com/mbxj/cb.github.io.git  # 设置 GitHub 远程仓库
          git fetch github main  # 拉取 GitHub 上的最新提交

          # 强制重置本地仓库为 GitCode 仓库的内容，避免任何冲突
          git reset --hard HEAD  # 重置本地仓库为当前克隆仓库的状态

          # 将本地仓库内容推送到 GitHub 仓库，强制覆盖所有内容
          git push --force https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/mbxj/cb.github.io.git main  # 强制推送

          # 确认推送后仓库的文件
          echo "Files after push:"
          git ls-tree -r main --name-only  # 列出推送后的文件，确认目标仓库的内容是否更新

      # Optional: Output confirmation
      - name: Output confirmation
        run: |
          echo "Sync completed successfully!"
